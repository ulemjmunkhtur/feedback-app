{"ast":null,"code":"var _jsxFileName = \"/Users/ulemjmunkhtur/Desktop/react_course/feedback-app/src/components/FeedbackForm.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useContext, useEffect } from 'react';\nimport RatingSelect from './RatingSelect';\nimport Card from './shared/Card';\nimport Button from './shared/Button';\nimport FeedbackContext from '../context/FeedbackContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FeedbackForm() {\n  _s();\n  const [text, setText] = useState('');\n  const [rating, setRating] = useState(10);\n  const [btnDisabled, setBtnDisabled] = useState(true);\n  const [message, setMessage] = useState('');\n  const {\n    addFeedback,\n    feedbackEdit,\n    updateFeedback\n  } = useContext(FeedbackContext);\n  useEffect(() => {\n    if (feedbackEdit.edit === true) {\n      setBtnDisabled(false);\n      setText(feedbackEdit.item.text);\n      setRating(feedbackEdit.item.rating);\n    }\n  }, [feedbackEdit]);\n\n  // NOTE: This should be checking input value not state as state won't be the updated value until the next render of the component\n\n  // prettier-ignore\n  const handleTextChange = ({\n    target: {\n      value\n    }\n  }) => {\n    // ðŸ‘ˆ  get the value\n    if (value === '') {\n      setBtnDisabled(true);\n      setMessage(null);\n\n      // prettier-ignore\n    } else if (value.trim().length < 10) {\n      // ðŸ‘ˆ check for less than 10\n      setMessage('Text must be at least 10 characters');\n      setBtnDisabled(true);\n    } else {\n      setMessage(null);\n      setBtnDisabled(false);\n    }\n    setText(value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (text.trim().length > 10) {\n      const newFeedback = {\n        text,\n        rating\n      };\n      if (feedbackEdit.edit === true) {\n        updateFeedback(feedbackEdit.item.id, newFeedback);\n      } else {\n        addFeedback(newFeedback);\n      }\n\n      // NOTE: reset to default state after submission\n      setBtnDisabled(true); // ðŸ‘ˆ  add this line to reset disabled\n      setRating(10); //ðŸ‘ˆ add this line to set rating back to 10\n      setText('');\n    }\n  };\n\n  // NOTE: pass selected to RatingSelect so we don't need local duplicate state\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"How would you rate your service with us?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RatingSelect, {\n        select: setRating,\n        selected: rating\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleTextChange,\n          type: \"text\",\n          placeholder: \"Write a review\",\n          value: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          isDisabled: btnDisabled,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(FeedbackForm, \"X7ov4iexSyI6ctQX0WMH7Afwqj0=\");\n_c = FeedbackForm;\nexport default FeedbackForm;\nvar _c;\n$RefreshReg$(_c, \"FeedbackForm\");","map":{"version":3,"names":["useState","useContext","useEffect","RatingSelect","Card","Button","FeedbackContext","jsxDEV","_jsxDEV","FeedbackForm","_s","text","setText","rating","setRating","btnDisabled","setBtnDisabled","message","setMessage","addFeedback","feedbackEdit","updateFeedback","edit","item","handleTextChange","target","value","trim","length","handleSubmit","e","preventDefault","newFeedback","id","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","select","selected","className","onChange","type","placeholder","isDisabled","_c","$RefreshReg$"],"sources":["/Users/ulemjmunkhtur/Desktop/react_course/feedback-app/src/components/FeedbackForm.jsx"],"sourcesContent":["import { useState, useContext, useEffect } from 'react'\nimport RatingSelect from './RatingSelect'\nimport Card from './shared/Card'\nimport Button from './shared/Button'\nimport FeedbackContext from '../context/FeedbackContext'\n\nfunction FeedbackForm() {\n  const [text, setText] = useState('')\n  const [rating, setRating] = useState(10)\n  const [btnDisabled, setBtnDisabled] = useState(true)\n  const [message, setMessage] = useState('')\n\n  const { addFeedback, feedbackEdit, updateFeedback } =\n    useContext(FeedbackContext)\n\n  useEffect(() => {\n    if (feedbackEdit.edit === true) {\n      setBtnDisabled(false)\n      setText(feedbackEdit.item.text)\n      setRating(feedbackEdit.item.rating)\n    }\n  }, [feedbackEdit])\n\n  // NOTE: This should be checking input value not state as state won't be the updated value until the next render of the component\n\n  // prettier-ignore\n  const handleTextChange = ({ target: { value } }) => { // ðŸ‘ˆ  get the value\n    if (value === '') {\n      setBtnDisabled(true)\n      setMessage(null)\n      \n  // prettier-ignore\n    } else if (value.trim().length < 10) { // ðŸ‘ˆ check for less than 10\n      setMessage('Text must be at least 10 characters')\n      setBtnDisabled(true)\n    } else {\n      setMessage(null)\n      setBtnDisabled(false)\n    }\n    setText(value)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if (text.trim().length > 10) {\n      const newFeedback = {\n        text,\n        rating,\n      }\n\n      if (feedbackEdit.edit === true) {\n        updateFeedback(feedbackEdit.item.id, newFeedback)\n      } else {\n        addFeedback(newFeedback)\n      }\n\n      // NOTE: reset to default state after submission\n      setBtnDisabled(true) // ðŸ‘ˆ  add this line to reset disabled\n      setRating(10) //ðŸ‘ˆ add this line to set rating back to 10\n      setText('')\n    }\n  }\n\n  // NOTE: pass selected to RatingSelect so we don't need local duplicate state\n  return (\n    <Card>\n      <form onSubmit={handleSubmit}>\n        <h2>How would you rate your service with us?</h2>\n        <RatingSelect select={setRating} selected={rating} />\n        <div className='input-group'>\n          <input\n            onChange={handleTextChange}\n            type='text'\n            placeholder='Write a review'\n            value={text}\n          />\n          <Button type='submit' isDisabled={btnDisabled}>\n            Send\n          </Button>\n        </div>\n\n        {message && <div className='message'>{message}</div>}\n      </form>\n    </Card>\n  )\n}\n\nexport default FeedbackForm\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}